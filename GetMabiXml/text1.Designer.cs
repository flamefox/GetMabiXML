//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FoxSearchAD {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("NewDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NewDataSet : global::System.Data.DataSet {
        
        private AdvertiseItemsDataTable tableAdvertiseItems;
        
        private ItemDescDataTable tableItemDesc;
        
        private global::System.Data.DataRelation relationAdvertiseItems_ItemDesc;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NewDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected NewDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["AdvertiseItems"] != null)) {
                    base.Tables.Add(new AdvertiseItemsDataTable(ds.Tables["AdvertiseItems"]));
                }
                if ((ds.Tables["ItemDesc"] != null)) {
                    base.Tables.Add(new ItemDescDataTable(ds.Tables["ItemDesc"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AdvertiseItemsDataTable AdvertiseItems {
            get {
                return this.tableAdvertiseItems;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ItemDescDataTable ItemDesc {
            get {
                return this.tableItemDesc;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            NewDataSet cln = ((NewDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["AdvertiseItems"] != null)) {
                    base.Tables.Add(new AdvertiseItemsDataTable(ds.Tables["AdvertiseItems"]));
                }
                if ((ds.Tables["ItemDesc"] != null)) {
                    base.Tables.Add(new ItemDescDataTable(ds.Tables["ItemDesc"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableAdvertiseItems = ((AdvertiseItemsDataTable)(base.Tables["AdvertiseItems"]));
            if ((initTable == true)) {
                if ((this.tableAdvertiseItems != null)) {
                    this.tableAdvertiseItems.InitVars();
                }
            }
            this.tableItemDesc = ((ItemDescDataTable)(base.Tables["ItemDesc"]));
            if ((initTable == true)) {
                if ((this.tableItemDesc != null)) {
                    this.tableItemDesc.InitVars();
                }
            }
            this.relationAdvertiseItems_ItemDesc = this.Relations["AdvertiseItems_ItemDesc"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "NewDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAdvertiseItems = new AdvertiseItemsDataTable();
            base.Tables.Add(this.tableAdvertiseItems);
            this.tableItemDesc = new ItemDescDataTable();
            base.Tables.Add(this.tableItemDesc);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("AdvertiseItems_ItemDesc", new global::System.Data.DataColumn[] {
                        this.tableAdvertiseItems.AdvertiseItems_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableItemDesc.AdvertiseItems_IdColumn});
            this.tableItemDesc.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationAdvertiseItems_ItemDesc = new global::System.Data.DataRelation("AdvertiseItems_ItemDesc", new global::System.Data.DataColumn[] {
                        this.tableAdvertiseItems.AdvertiseItems_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableItemDesc.AdvertiseItems_IdColumn}, false);
            this.relationAdvertiseItems_ItemDesc.Nested = true;
            this.Relations.Add(this.relationAdvertiseItems_ItemDesc);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAdvertiseItems() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeItemDesc() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void AdvertiseItemsRowChangeEventHandler(object sender, AdvertiseItemsRowChangeEvent e);
        
        public delegate void ItemDescRowChangeEventHandler(object sender, ItemDescRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AdvertiseItemsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnNextPage;
            
            private global::System.Data.DataColumn columnNowPage;
            
            private global::System.Data.DataColumn columnAdvertiseItems_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AdvertiseItemsDataTable() {
                this.TableName = "AdvertiseItems";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AdvertiseItemsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AdvertiseItemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextPageColumn {
                get {
                    return this.columnNextPage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NowPageColumn {
                get {
                    return this.columnNowPage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvertiseItems_IdColumn {
                get {
                    return this.columnAdvertiseItems_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AdvertiseItemsRow this[int index] {
                get {
                    return ((AdvertiseItemsRow)(this.Rows[index]));
                }
            }
            
            public event AdvertiseItemsRowChangeEventHandler AdvertiseItemsRowChanging;
            
            public event AdvertiseItemsRowChangeEventHandler AdvertiseItemsRowChanged;
            
            public event AdvertiseItemsRowChangeEventHandler AdvertiseItemsRowDeleting;
            
            public event AdvertiseItemsRowChangeEventHandler AdvertiseItemsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAdvertiseItemsRow(AdvertiseItemsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AdvertiseItemsRow AddAdvertiseItemsRow(string NextPage, string NowPage) {
                AdvertiseItemsRow rowAdvertiseItemsRow = ((AdvertiseItemsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NextPage,
                        NowPage,
                        null};
                rowAdvertiseItemsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAdvertiseItemsRow);
                return rowAdvertiseItemsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AdvertiseItemsDataTable cln = ((AdvertiseItemsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AdvertiseItemsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNextPage = base.Columns["NextPage"];
                this.columnNowPage = base.Columns["NowPage"];
                this.columnAdvertiseItems_Id = base.Columns["AdvertiseItems_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNextPage = new global::System.Data.DataColumn("NextPage", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnNextPage);
                this.columnNowPage = new global::System.Data.DataColumn("NowPage", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnNowPage);
                this.columnAdvertiseItems_Id = new global::System.Data.DataColumn("AdvertiseItems_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnAdvertiseItems_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAdvertiseItems_Id}, true));
                this.columnNextPage.Namespace = "";
                this.columnNowPage.Namespace = "";
                this.columnAdvertiseItems_Id.AutoIncrement = true;
                this.columnAdvertiseItems_Id.AllowDBNull = false;
                this.columnAdvertiseItems_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AdvertiseItemsRow NewAdvertiseItemsRow() {
                return ((AdvertiseItemsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AdvertiseItemsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AdvertiseItemsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AdvertiseItemsRowChanged != null)) {
                    this.AdvertiseItemsRowChanged(this, new AdvertiseItemsRowChangeEvent(((AdvertiseItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AdvertiseItemsRowChanging != null)) {
                    this.AdvertiseItemsRowChanging(this, new AdvertiseItemsRowChangeEvent(((AdvertiseItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AdvertiseItemsRowDeleted != null)) {
                    this.AdvertiseItemsRowDeleted(this, new AdvertiseItemsRowChangeEvent(((AdvertiseItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AdvertiseItemsRowDeleting != null)) {
                    this.AdvertiseItemsRowDeleting(this, new AdvertiseItemsRowChangeEvent(((AdvertiseItemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAdvertiseItemsRow(AdvertiseItemsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AdvertiseItemsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ItemDescDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnItem_ID;
            
            private global::System.Data.DataColumn columnShop_Name;
            
            private global::System.Data.DataColumn columnArea;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnStart_Time;
            
            private global::System.Data.DataColumn columnItem_ClassId;
            
            private global::System.Data.DataColumn columnChar_Name;
            
            private global::System.Data.DataColumn columnItem_Name;
            
            private global::System.Data.DataColumn columnItem_Price;
            
            private global::System.Data.DataColumn columnItem_Color1;
            
            private global::System.Data.DataColumn columnItem_Color2;
            
            private global::System.Data.DataColumn columnItem_Color3;
            
            private global::System.Data.DataColumn columnCount;
            
            private global::System.Data.DataColumn columnAdvertiseItems_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDescDataTable() {
                this.TableName = "ItemDesc";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemDescDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ItemDescDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_IDColumn {
                get {
                    return this.columnItem_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Shop_NameColumn {
                get {
                    return this.columnShop_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AreaColumn {
                get {
                    return this.columnArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Start_TimeColumn {
                get {
                    return this.columnStart_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_ClassIdColumn {
                get {
                    return this.columnItem_ClassId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Char_NameColumn {
                get {
                    return this.columnChar_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_NameColumn {
                get {
                    return this.columnItem_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_PriceColumn {
                get {
                    return this.columnItem_Price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_Color1Column {
                get {
                    return this.columnItem_Color1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_Color2Column {
                get {
                    return this.columnItem_Color2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_Color3Column {
                get {
                    return this.columnItem_Color3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountColumn {
                get {
                    return this.columnCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvertiseItems_IdColumn {
                get {
                    return this.columnAdvertiseItems_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDescRow this[int index] {
                get {
                    return ((ItemDescRow)(this.Rows[index]));
                }
            }
            
            public event ItemDescRowChangeEventHandler ItemDescRowChanging;
            
            public event ItemDescRowChangeEventHandler ItemDescRowChanged;
            
            public event ItemDescRowChangeEventHandler ItemDescRowDeleting;
            
            public event ItemDescRowChangeEventHandler ItemDescRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddItemDescRow(ItemDescRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDescRow AddItemDescRow(string Item_ID, string Shop_Name, string Area, string Comment, string Start_Time, string Item_ClassId, string Char_Name, string Item_Name, int Item_Price, int Item_Color1, int Item_Color2, int Item_Color3, string Count, AdvertiseItemsRow parentAdvertiseItemsRowByAdvertiseItems_ItemDesc) {
                ItemDescRow rowItemDescRow = ((ItemDescRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Item_ID,
                        Shop_Name,
                        Area,
                        Comment,
                        Start_Time,
                        Item_ClassId,
                        Char_Name,
                        Item_Name,
                        Item_Price,
                        Item_Color1,
                        Item_Color2,
                        Item_Color3,
                        Count,
                        null};
                if ((parentAdvertiseItemsRowByAdvertiseItems_ItemDesc != null)) {
                    columnValuesArray[13] = parentAdvertiseItemsRowByAdvertiseItems_ItemDesc[2];
                }
                rowItemDescRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowItemDescRow);
                return rowItemDescRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ItemDescDataTable cln = ((ItemDescDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ItemDescDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItem_ID = base.Columns["Item_ID"];
                this.columnShop_Name = base.Columns["Shop_Name"];
                this.columnArea = base.Columns["Area"];
                this.columnComment = base.Columns["Comment"];
                this.columnStart_Time = base.Columns["Start_Time"];
                this.columnItem_ClassId = base.Columns["Item_ClassId"];
                this.columnChar_Name = base.Columns["Char_Name"];
                this.columnItem_Name = base.Columns["Item_Name"];
                this.columnItem_Price = base.Columns["Item_Price"];
                this.columnItem_Color1 = base.Columns["Item_Color1"];
                this.columnItem_Color2 = base.Columns["Item_Color2"];
                this.columnItem_Color3 = base.Columns["Item_Color3"];
                this.columnCount = base.Columns["Count"];
                this.columnAdvertiseItems_Id = base.Columns["AdvertiseItems_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItem_ID = new global::System.Data.DataColumn("Item_ID", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnItem_ID);
                this.columnShop_Name = new global::System.Data.DataColumn("Shop_Name", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnShop_Name);
                this.columnArea = new global::System.Data.DataColumn("Area", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnArea);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnComment);
                this.columnStart_Time = new global::System.Data.DataColumn("Start_Time", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnStart_Time);
                this.columnItem_ClassId = new global::System.Data.DataColumn("Item_ClassId", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnItem_ClassId);
                this.columnChar_Name = new global::System.Data.DataColumn("Char_Name", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnChar_Name);
                this.columnItem_Name = new global::System.Data.DataColumn("Item_Name", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnItem_Name);
                this.columnItem_Price = new global::System.Data.DataColumn("Item_Price", typeof(int), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnItem_Price);
                this.columnItem_Color1 = new global::System.Data.DataColumn("Item_Color1", typeof(int), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnItem_Color1);
                this.columnItem_Color2 = new global::System.Data.DataColumn("Item_Color2", typeof(int), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnItem_Color2);
                this.columnItem_Color3 = new global::System.Data.DataColumn("Item_Color3", typeof(int), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnItem_Color3);
                this.columnCount = new global::System.Data.DataColumn("Count", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnCount);
                this.columnAdvertiseItems_Id = new global::System.Data.DataColumn("AdvertiseItems_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnAdvertiseItems_Id);
                this.columnItem_ID.Namespace = "";
                this.columnShop_Name.Namespace = "";
                this.columnArea.Namespace = "";
                this.columnComment.Namespace = "";
                this.columnStart_Time.Namespace = "";
                this.columnItem_ClassId.Namespace = "";
                this.columnChar_Name.Namespace = "";
                this.columnItem_Name.Namespace = "";
                this.columnItem_Price.Namespace = "";
                this.columnItem_Color1.Namespace = "";
                this.columnItem_Color2.Namespace = "";
                this.columnItem_Color3.Namespace = "";
                this.columnCount.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDescRow NewItemDescRow() {
                return ((ItemDescRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ItemDescRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ItemDescRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ItemDescRowChanged != null)) {
                    this.ItemDescRowChanged(this, new ItemDescRowChangeEvent(((ItemDescRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ItemDescRowChanging != null)) {
                    this.ItemDescRowChanging(this, new ItemDescRowChangeEvent(((ItemDescRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ItemDescRowDeleted != null)) {
                    this.ItemDescRowDeleted(this, new ItemDescRowChangeEvent(((ItemDescRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ItemDescRowDeleting != null)) {
                    this.ItemDescRowDeleting(this, new ItemDescRowChangeEvent(((ItemDescRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveItemDescRow(ItemDescRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ItemDescDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AdvertiseItemsRow : global::System.Data.DataRow {
            
            private AdvertiseItemsDataTable tableAdvertiseItems;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AdvertiseItemsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAdvertiseItems = ((AdvertiseItemsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NextPage {
                get {
                    try {
                        return ((string)(this[this.tableAdvertiseItems.NextPageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextPage\' in table \'AdvertiseItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdvertiseItems.NextPageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NowPage {
                get {
                    try {
                        return ((string)(this[this.tableAdvertiseItems.NowPageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NowPage\' in table \'AdvertiseItems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdvertiseItems.NowPageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AdvertiseItems_Id {
                get {
                    return ((int)(this[this.tableAdvertiseItems.AdvertiseItems_IdColumn]));
                }
                set {
                    this[this.tableAdvertiseItems.AdvertiseItems_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextPageNull() {
                return this.IsNull(this.tableAdvertiseItems.NextPageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextPageNull() {
                this[this.tableAdvertiseItems.NextPageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNowPageNull() {
                return this.IsNull(this.tableAdvertiseItems.NowPageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNowPageNull() {
                this[this.tableAdvertiseItems.NowPageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDescRow[] GetItemDescRows() {
                if ((this.Table.ChildRelations["AdvertiseItems_ItemDesc"] == null)) {
                    return new ItemDescRow[0];
                }
                else {
                    return ((ItemDescRow[])(base.GetChildRows(this.Table.ChildRelations["AdvertiseItems_ItemDesc"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ItemDescRow : global::System.Data.DataRow {
            
            private ItemDescDataTable tableItemDesc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemDescRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableItemDesc = ((ItemDescDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_ID {
                get {
                    try {
                        return ((string)(this[this.tableItemDesc.Item_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_ID\' in table \'ItemDesc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDesc.Item_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Shop_Name {
                get {
                    try {
                        return ((string)(this[this.tableItemDesc.Shop_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shop_Name\' in table \'ItemDesc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDesc.Shop_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Area {
                get {
                    try {
                        return ((string)(this[this.tableItemDesc.AreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Area\' in table \'ItemDesc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDesc.AreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableItemDesc.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'ItemDesc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDesc.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Start_Time {
                get {
                    try {
                        return ((string)(this[this.tableItemDesc.Start_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Start_Time\' in table \'ItemDesc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDesc.Start_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_ClassId {
                get {
                    try {
                        return ((string)(this[this.tableItemDesc.Item_ClassIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_ClassId\' in table \'ItemDesc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDesc.Item_ClassIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Char_Name {
                get {
                    try {
                        return ((string)(this[this.tableItemDesc.Char_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Char_Name\' in table \'ItemDesc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDesc.Char_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_Name {
                get {
                    try {
                        return ((string)(this[this.tableItemDesc.Item_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Name\' in table \'ItemDesc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDesc.Item_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Item_Price {
                get {
                    try {
                        return ((int)(this[this.tableItemDesc.Item_PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Price\' in table \'ItemDesc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDesc.Item_PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Item_Color1 {
                get {
                    try {
                        return ((int)(this[this.tableItemDesc.Item_Color1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Color1\' in table \'ItemDesc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDesc.Item_Color1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Item_Color2 {
                get {
                    try {
                        return ((int)(this[this.tableItemDesc.Item_Color2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Color2\' in table \'ItemDesc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDesc.Item_Color2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Item_Color3 {
                get {
                    try {
                        return ((int)(this[this.tableItemDesc.Item_Color3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Color3\' in table \'ItemDesc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDesc.Item_Color3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Count {
                get {
                    try {
                        return ((string)(this[this.tableItemDesc.CountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Count\' in table \'ItemDesc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDesc.CountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AdvertiseItems_Id {
                get {
                    try {
                        return ((int)(this[this.tableItemDesc.AdvertiseItems_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvertiseItems_Id\' in table \'ItemDesc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDesc.AdvertiseItems_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AdvertiseItemsRow AdvertiseItemsRow {
                get {
                    return ((AdvertiseItemsRow)(this.GetParentRow(this.Table.ParentRelations["AdvertiseItems_ItemDesc"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["AdvertiseItems_ItemDesc"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_IDNull() {
                return this.IsNull(this.tableItemDesc.Item_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_IDNull() {
                this[this.tableItemDesc.Item_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShop_NameNull() {
                return this.IsNull(this.tableItemDesc.Shop_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShop_NameNull() {
                this[this.tableItemDesc.Shop_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAreaNull() {
                return this.IsNull(this.tableItemDesc.AreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAreaNull() {
                this[this.tableItemDesc.AreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableItemDesc.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableItemDesc.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStart_TimeNull() {
                return this.IsNull(this.tableItemDesc.Start_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStart_TimeNull() {
                this[this.tableItemDesc.Start_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_ClassIdNull() {
                return this.IsNull(this.tableItemDesc.Item_ClassIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_ClassIdNull() {
                this[this.tableItemDesc.Item_ClassIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChar_NameNull() {
                return this.IsNull(this.tableItemDesc.Char_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChar_NameNull() {
                this[this.tableItemDesc.Char_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_NameNull() {
                return this.IsNull(this.tableItemDesc.Item_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_NameNull() {
                this[this.tableItemDesc.Item_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_PriceNull() {
                return this.IsNull(this.tableItemDesc.Item_PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_PriceNull() {
                this[this.tableItemDesc.Item_PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_Color1Null() {
                return this.IsNull(this.tableItemDesc.Item_Color1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_Color1Null() {
                this[this.tableItemDesc.Item_Color1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_Color2Null() {
                return this.IsNull(this.tableItemDesc.Item_Color2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_Color2Null() {
                this[this.tableItemDesc.Item_Color2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_Color3Null() {
                return this.IsNull(this.tableItemDesc.Item_Color3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_Color3Null() {
                this[this.tableItemDesc.Item_Color3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountNull() {
                return this.IsNull(this.tableItemDesc.CountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountNull() {
                this[this.tableItemDesc.CountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdvertiseItems_IdNull() {
                return this.IsNull(this.tableItemDesc.AdvertiseItems_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdvertiseItems_IdNull() {
                this[this.tableItemDesc.AdvertiseItems_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AdvertiseItemsRowChangeEvent : global::System.EventArgs {
            
            private AdvertiseItemsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AdvertiseItemsRowChangeEvent(AdvertiseItemsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AdvertiseItemsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ItemDescRowChangeEvent : global::System.EventArgs {
            
            private ItemDescRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDescRowChangeEvent(ItemDescRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDescRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591